{"version":3,"sources":["context.ts","components/images/googleIcon.svg","components/Authenticate.tsx","components/Navbar.tsx","components/images/plusIcon.svg","redux/type.ts","redux/actions.ts","categories.ts","components/Body.tsx","components/AddTaskForm.tsx","App.tsx","redux/reducers/index.ts","index.tsx"],"names":["Context","React","createContext","signIn","signOut","Authenticate","auths","useContext","useSelector","state","user","className","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","src","googleIcon","alt","Logo","NavElements","changeTheme","displayName","Burger","toggle","Sidebar","props","active","id","e","stopPropagation","Navbar","useState","sidebarActive","setSidebarActive","toggleSidebar","ps","habitDispatches","userDispatches","removeHabit","type","payload","categories","name","color","Habit","title","description","category","completed","dispatcher","useDispatch","docRef","firebase","firestore","collection","doc","weekDates","weeklyDaysNames","today","Date","startOfWeek","getTime","getDay","i","day","push","dayOfWeek","getDate","month","getMonth","year","getFullYear","getWeekDates","find","complete","update","FieldValue","arrayUnion","deleteDoc","a","delete","then","style","map","index","condition","weekToday","isCompleted","backgroundColor","x","y","rx","mask-type","maskUnits","mask","Body","add","db","useMemo","auth","habits","useEffect","isAuth","currentUser","uid","unsubscribe","orderBy","where","onSnapshot","snap","docs","forEach","item","newHabit","data","h","plusIcon","intialFormValue","Dropdown","value","setValue","warning","btn","useRef","ul","setActive","chosen","blur","setTimeout","onBlur","preventDefault","current","ref","Field","placeholder","onChange","target","Form","close","values","setValues","warnings","setWarnings","controlledSetState","submit","submittable","serverTimestamp","createdAt","onSubmit","initializeApp","config","App","darkTheme","setDarkTheme","form","showForm","window","localStorage","getItem","matchMedia","matches","onAuthStateChanged","login","provider","GoogleAuthProvider","signInWithPopup","Provider","setItem","allReducers","combineReducers","action","found","findIndex","slice","console","warn","foundHabit","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf21646.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext({\r\n  signIn: () => {\r\n\r\n  },\r\n  signOut: () => {\r\n    \r\n  }\r\n});\r\n\r\nexport default Context;","export default __webpack_public_path__ + \"static/media/googleIcon.26bdb3f3.svg\";","import { useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Context from \"../context\";\r\nimport googleIcon from \"./images/googleIcon.svg\";\r\nimport { storeType } from \"../redux/reducers\";\r\n\r\nconst Authenticate = () => {\r\n  const auths = useContext(Context);\r\n  const user = useSelector((state: storeType) => state.user);\r\n\r\n  return !user ? (\r\n    <div className=\"login\" onClick={auths.signIn}>\r\n      <div>\r\n        <img src={googleIcon} alt=\"Google\" />\r\n      </div>\r\n      <div>Sign In</div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"logout\" onClick={auths.signOut}>\r\n      <svg\r\n        width=\"36\"\r\n        height=\"34\"\r\n        viewBox=\"0 0 36 34\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          className=\"arrow\"\r\n          d=\"M19 16C18.4477 16 18 16.4477 18 17C18 17.5523 18.4477 18 19 18V16ZM35.7071 17.7071C36.0976 17.3166 36.0976 16.6834 35.7071 16.2929L29.3431 9.92893C28.9526 9.53841 28.3195 9.53841 27.9289 9.92893C27.5384 10.3195 27.5384 10.9526 27.9289 11.3431L33.5858 17L27.9289 22.6569C27.5384 23.0474 27.5384 23.6805 27.9289 24.0711C28.3195 24.4616 28.9526 24.4616 29.3431 24.0711L35.7071 17.7071ZM19 18L35 18V16L19 16V18Z\"\r\n          fill=\"black\"\r\n        />\r\n        <path\r\n          d=\"M27 6V2H2V32H27V27.5\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authenticate;\r\n","import { MouseEventHandler, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { storeType } from \"../redux/reducers\";\r\nimport Authenticate from \"./Authenticate\";\r\n\r\ntype toggleFunction = MouseEventHandler<HTMLLIElement>;\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <li className=\"nav-brand\">\r\n      <h3>Habit Builder</h3>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst NavElements = ({ changeTheme }: { changeTheme: Function }) => {\r\n  const user = useSelector((state: storeType) => state.user);\r\n  return (\r\n    <li className=\"nav-elements\">\r\n      <ul>\r\n        <li onClick={() => changeTheme()}>Theme</li>\r\n        <li className={`userArea ${user ? \"loggedIn\" : \"\"}`}>\r\n          {user ? (\r\n            <div>\r\n              <div className=\"welcome\">Hello,</div>{\" \"}\r\n              <div className=\"username\">{user.displayName}</div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Authenticate />\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Burger = ({ toggle }: { toggle: toggleFunction }) => {\r\n  return (\r\n    <li className=\"burger-menu\" onClick={toggle}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Sidebar = (props: {\r\n  active: boolean;\r\n  toggle: Function;\r\n  changeTheme: Function;\r\n}) => {\r\n  const { active, toggle, changeTheme } = props;\r\n  return (\r\n    <div\r\n      id=\"sidebar\"\r\n      className={active ? \"active\" : \"\"}\r\n      onClick={(e) => toggle()}\r\n    >\r\n      <ul onClick={(e) => e.stopPropagation()}>\r\n        <li onClick={() => changeTheme()}>Theme</li>\r\n        <li>\r\n          <Authenticate />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Navbar = ({ changeTheme }: { changeTheme: Function }) => {\r\n  const [sidebarActive, setSidebarActive] = useState(false);\r\n\r\n  const toggleSidebar = () => setSidebarActive((ps) => !ps);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"nav-bar\">\r\n        <nav>\r\n          <ul>\r\n            <Logo />\r\n            <NavElements {...{ changeTheme }} />\r\n            <Burger toggle={toggleSidebar} />\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <Sidebar\r\n        active={sidebarActive}\r\n        toggle={toggleSidebar}\r\n        {...{ changeTheme }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/plusIcon.73a033ba.svg\";","import firebase from \"firebase\"\r\n\r\nexport type habit = {\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  completed: Array<dateOfCompletion>,\r\n  category: string\r\n}\r\n\r\nexport type dateOfCompletion = {\r\n  day: number,\r\n  month: number,\r\n  year: number\r\n}\r\n\r\nexport type HabitActionType = {\r\n  type: string,\r\n  payload: habit | string,\r\n}\r\n\r\nexport type UserActionType = {\r\n  type: string,\r\n  payload?: firebase.User,\r\n}\r\n\r\nexport const habitDispatches = {\r\n  ADD: \"ADD\",\r\n  DELETE: \"DELETE\",\r\n  CLEAR: \"CLEAR\"\r\n}\r\n\r\nexport const userDispatches = {\r\n  LOGIN: \"LOGIN\",\r\n  LOGOUT: \"LOGOUT\"\r\n}","import { HabitActionType, habitDispatches, habit, UserActionType, userDispatches } from \"./type\";\r\nimport firebase from \"firebase/app\";\r\n\r\nexport const addHabit = (newHabit: habit): HabitActionType => ({\r\n  type: habitDispatches.ADD,\r\n  payload: newHabit\r\n});\r\n\r\nexport const removeHabit = (id: string): HabitActionType => ({\r\n  type: habitDispatches.DELETE,\r\n  payload: id\r\n});\r\n\r\nexport const login = (user: firebase.User): UserActionType => ({\r\n  type: userDispatches.LOGIN,\r\n  payload: user\r\n});\r\n\r\nexport const logout = (): UserActionType => ({\r\n  type: userDispatches.LOGOUT\r\n});\r\n\r\nexport const clearHabits = (): HabitActionType =>({\r\n  type: habitDispatches.CLEAR,\r\n  payload: \"\"\r\n});","const categories = [\r\n  { name: \"Health\", color: \"#5B965E\" },\r\n  { name: \"Hobby\", color: \"#4357AD\" },\r\n  { name: \"Productivity\", color: \"#B80C09\" },\r\n];\r\n\r\nexport default categories;","import plusIcon from \"./images/plusIcon.svg\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\"\r\nimport { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeType } from \"../redux/reducers\";\r\nimport { addHabit, removeHabit, clearHabits } from \"../redux/actions\";\r\nimport categories from \"../categories\";\r\nimport { dateOfCompletion } from \"../redux/type\";\r\n\r\ntype dayInfo = {\r\n  dayOfWeek: string,\r\n  day: number,\r\n  month: number,\r\n  year: number\r\n}\r\n\r\nconst getWeekDates = () => {\r\n  const weeklyDaysNames = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n  const today = new Date();\r\n  const startOfWeek = new Date(today.getTime() - (today.getDay() * 86400000));\r\n\r\n  const weekDates: Array<dayInfo> = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    const day = new Date(startOfWeek.getTime() + (i * 86400000));\r\n    weekDates.push({\r\n      dayOfWeek: weeklyDaysNames[day.getDay()],\r\n      day: day.getDate(),\r\n      month: day.getMonth(),\r\n      year: day.getFullYear()\r\n    });\r\n  }\r\n  return weekDates;\r\n}\r\n\r\nconst Habit = (props: { title: string, description: string, category: string, completed: Array<dateOfCompletion>, id: string }) => {\r\n  const { title, description, category, completed, id } = props;\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  const docRef = firebase.firestore().collection(\"habits\").doc(id);\r\n\r\n  const weekDates = getWeekDates();\r\n\r\n  const color = categories.find(i => i.name === category)?.color;\r\n\r\n  const isCompleted = () => {\r\n    const today = new Date();\r\n    const weekToday = weekDates[today.getDay()];\r\n    const foundDay = completed.find(d => (d.day === weekToday.day && d.month === weekToday.month && d.year === weekToday.year))\r\n    if (foundDay) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const complete = () => {\r\n    const today = new Date();\r\n    docRef.update({\r\n      completed: firebase.firestore.FieldValue.arrayUnion({\r\n        day: today.getDate(),\r\n        month: today.getMonth(),\r\n        year: today.getFullYear()\r\n      })\r\n    });\r\n  }\r\n\r\n  const deleteDoc = async () => {\r\n    docRef.delete().then(() => dispatcher(removeHabit(id)));\r\n  }\r\n\r\n  return (<div className=\"habit\">\r\n    <div className=\"title\" style={{ color }}>\r\n      <div>\r\n        <div className=\"mainInfo\">\r\n          <h3>{title}</h3>\r\n          <button onClick={deleteDoc} className=\"deleteBtn\">Remove</button>\r\n        </div>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"track\">\r\n      <div className=\"summary\">\r\n        <h3>Weekly Track</h3>\r\n        <div className=\"weeklyDays\">\r\n          {weekDates.map((day, index) => {\r\n            return (\r\n              <span key={`${day.dayOfWeek}:${index}`}>{day.dayOfWeek}</span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          {weekDates.map((day, index) => {\r\n            const condition = (completed.find(i => (i.day === day.day && i.month === day.month && i.year === day.year)));\r\n            return (\r\n              <span key={`${day.dayOfWeek}:${index}`}>{condition ? <svg width=\"16\" height=\"14\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M1 8L6 12L14 1\" strokeWidth=\"2\" stroke={color} />\r\n              </svg>\r\n                : <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path className=\"cross\" d=\"M1 1L10 10M1 10L10 1\" strokeWidth=\"2\" stroke=\"black\" />\r\n                </svg>\r\n              }</span>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      {isCompleted() ? <div className=\"taskDone\" style={{ color }}><div>Great</div><div>Job!</div></div> : <><div onClick={e => complete()} className=\"checkIn\" style={{ backgroundColor: color }}>\r\n        <svg className=\"desktopCheck\" width=\"50\" height=\"44\" viewBox=\"0 0 50 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M3 24.2L17.6667 39L47 2\" stroke=\"#F4F4F4\" strokeWidth=\"6\" />\r\n        </svg>\r\n      </div>\r\n        <div onClick={e => complete()} className=\"mobileCheck\">\r\n          <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"0.5\" y=\"0.5\" width=\"59\" height=\"59\" rx=\"29.5\" fill={color} stroke=\"black\" />\r\n            <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"60\" height=\"60\">\r\n              <rect x=\"0.5\" y=\"0.5\" width=\"59\" height=\"59\" rx=\"29.5\" fill={color} stroke=\"black\" />\r\n            </mask>\r\n            <g mask=\"url(#mask0)\">\r\n              <path d=\"M8 31.2L25.3333 46L60 9\" stroke=\"#F4F4F4\" strokeWidth=\"6\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </>}\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nconst Body = ({ add }: { add: Function }) => {\r\n  const db = useMemo(() => firebase.firestore(), []);\r\n  const auth = useMemo(() => firebase.auth(), []);\r\n  const dispatcher = useDispatch();\r\n  const habits = useSelector((state: storeType) => state.habits);\r\n\r\n  useEffect(() => {\r\n    const isAuth = auth;\r\n    if (isAuth.currentUser?.uid) {\r\n      const unsubscribe = db\r\n        .collection(\"habits\")\r\n        .orderBy(\"createdAt\")\r\n        .where(\"uid\", \"==\", isAuth.currentUser.uid)\r\n        .onSnapshot((snap) => {\r\n          snap.docs.forEach((item) => {\r\n            const data = item.data();\r\n            dispatcher(\r\n              addHabit({\r\n                id: item.id,\r\n                title: data.title,\r\n                category: data.category,\r\n                description: data.description,\r\n                completed: data.completed,\r\n              })\r\n            );\r\n          });\r\n        });\r\n\r\n      return () => {\r\n        unsubscribe();\r\n        dispatcher(clearHabits());\r\n      };\r\n    }\r\n  }, [auth, db, dispatcher]);\r\n  return (\r\n    <div className=\"body\">\r\n      {habits.map((h => {\r\n        return <Habit id={h.id} title={h.title} description={h.description} category={h.category} completed={h.completed} key={h.id} />\r\n      }))}\r\n      <div className=\"addBtn\">\r\n        <div onClick={() => add()}>\r\n          <img src={plusIcon} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport categories from \"../categories\";\r\nimport firebase from 'firebase/app';\r\nimport { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { storeType } from '../redux/reducers';\r\n\r\ntype habitValues = {\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n};\r\n\r\nconst intialFormValue: habitValues = {\r\n  title: \"\",\r\n  description: \"\",\r\n  category: \"\",\r\n};\r\n\r\nconst Dropdown = ({\r\n  value,\r\n  setValue,\r\n  warning,\r\n}: {\r\n  value: string;\r\n  setValue: Function;\r\n  warning: string;\r\n}) => {\r\n  const btn = useRef<HTMLButtonElement>(null);\r\n  const ul = useRef<HTMLUListElement>(null);\r\n\r\n  const [active, setActive] = useState(false);\r\n\r\n  const chosen = categories.find((i) => i.name === value);\r\n\r\n  const blur = () => {\r\n    setTimeout(() => setActive(false), 150);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`dropdownContainer ${active ? \"active\" : \"\"} ${warning ? \"warn\" : \"\"\r\n        }`}\r\n    >\r\n      <div className=\"warningContainer\">\r\n        <div className=\"warningMsg\">{warning}</div>\r\n      </div>\r\n      <div>\r\n        <button\r\n          onBlur={blur}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            active ? btn.current?.blur() : setActive(true);\r\n          }}\r\n          ref={btn}\r\n          className=\"dropdownBtn\"\r\n        >\r\n          {chosen ? (\r\n            <div style={{ color: chosen.color }}>{chosen.name}</div>\r\n          ) : (\r\n            <div>Category</div>\r\n          )}\r\n          <div className=\"arrow\">\r\n            <svg\r\n              width=\"24\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 24 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M10.9393 13.0607C11.5251 13.6464 12.4749 13.6464 13.0607 13.0607L22.6066 3.51472C23.1924 2.92893 23.1924 1.97919 22.6066 1.3934C22.0208 0.807611 21.0711 0.807611 20.4853 1.3934L12 9.87868L3.51472 1.3934C2.92893 0.807611 1.97919 0.807611 1.3934 1.3934C0.807611 1.97919 0.807611 2.92893 1.3934 3.51472L10.9393 13.0607ZM10.5 10V12H13.5V10H10.5Z\"\r\n                fill=\"black\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </button>\r\n        <ul className=\"dropdownList\" ref={ul} onBlur={blur}>\r\n          {categories.map((i) => (\r\n            <li\r\n              key={i.name}\r\n              onClick={() => (active ? setValue(i.name) : null)}\r\n              style={{\r\n                color: i.color,\r\n              }}\r\n            >\r\n              {i.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Field = ({\r\n  value,\r\n  setValue,\r\n  className,\r\n  placeholder,\r\n  warning,\r\n}: {\r\n  value: string;\r\n  setValue: Function;\r\n  className: string;\r\n  placeholder: string;\r\n  warning: string;\r\n}) => {\r\n  return (\r\n    <div className={`field ${warning ? \"warn\" : \"\"}`}>\r\n      <div className=\"warningContainer\">\r\n        <div className=\"warningMsg\">{warning}</div>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setValue(e.target.value)}\r\n        {...{ value, className, placeholder }}\r\n      />\r\n      <div className=\"hr\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Form = ({ close }: { close: Function }) => {\r\n  const [values, setValues] = useState(intialFormValue);\r\n  const [warnings, setWarnings] = useState(intialFormValue);\r\n  const [active, setActive] = useState(true);\r\n\r\n  const user = useSelector((state: storeType) => state.user);\r\n\r\n  const db = useMemo(() => firebase.firestore(), []);\r\n\r\n  const controlledSetState = (item: {\r\n    title?: string;\r\n    description?: string;\r\n    category?: string;\r\n  }) => {\r\n    setValues((ps) => ({ ...ps, ...item }));\r\n  };\r\n\r\n  const submit: React.FormEventHandler = async (e) => {\r\n    e.preventDefault();\r\n    let submittable = true;\r\n    if (values.title === \"\") {\r\n      setWarnings((ps) => ({ ...ps, title: \"Please Enter a Title\" }));\r\n      submittable = false;\r\n    }\r\n    if (values.description === \"\") {\r\n      setWarnings((ps) => ({\r\n        ...ps,\r\n        description: \"Please Enter a Description\",\r\n      }));\r\n      submittable = false;\r\n    }\r\n    if (values.category === \"\") {\r\n      setWarnings((ps) => ({ ...ps, category: \"Please Select a Category\" }));\r\n      submittable = false;\r\n    }\r\n    if (submittable) {\r\n      const { serverTimestamp } = firebase.firestore.FieldValue;\r\n      await db.collection(\"habits\").add(\r\n        { ...values, createdAt: serverTimestamp(), uid: user?.uid, completed: [] }\r\n      );\r\n      setActive(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!active) {\r\n      setTimeout(() => close(), 300);\r\n    }\r\n  }, [active, close]);\r\n\r\n  return (\r\n    <div\r\n      id=\"formContainer\"\r\n      className={active ? \"active\" : \"\"}\r\n      onClick={() => setActive(false)}\r\n    >\r\n      <div onClick={(e) => e.stopPropagation()}>\r\n        <form onSubmit={submit}>\r\n          <div>\r\n            <Field\r\n              className=\"title\"\r\n              placeholder=\"Title\"\r\n              value={values.title}\r\n              warning={warnings.title}\r\n              setValue={(title: string) => {\r\n                controlledSetState({ title });\r\n                setWarnings((ps) => ({ ...ps, title: \"\" }));\r\n              }}\r\n            />\r\n            <Field\r\n              className=\"description\"\r\n              placeholder=\"Description\"\r\n              value={values.description}\r\n              warning={warnings.description}\r\n              setValue={(description: string) => {\r\n                controlledSetState({ description });\r\n                setWarnings((ps) => ({ ...ps, description: \"\" }));\r\n              }}\r\n            />\r\n            <Dropdown\r\n              warning={warnings.category}\r\n              value={values.category}\r\n              setValue={(category: string) => {\r\n                controlledSetState({ category });\r\n                setWarnings((ps) => ({ ...ps, category: \"\" }));\r\n              }}\r\n            />\r\n            <div className=\"submission\">\r\n              <button onClick={() => setActive(false)}>Cancel</button>\r\n              <input type=\"submit\" value=\"Save\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./styles/main.scss\";\r\nimport \"./styles/reset.css\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport config from \"./firebase.json\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Body from \"./components/Body\";\r\nimport Form from \"./components/AddTaskForm\";\r\nimport Authenticate from \"./components/Authenticate\";\r\n\r\nimport { login, logout } from \"./redux/actions\";\r\nimport { storeType } from \"./redux/reducers\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Context from \"./context\";\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst auth = firebase.auth();\r\n\r\nconst getTheme = () => {\r\n  const value = window.localStorage.getItem(\"theme\");\r\n  if (value === \"light\") {\r\n    return false;\r\n  }\r\n  return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n};\r\n\r\nconst App = () => {\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n  const [form, showForm] = useState(false);\r\n  const user = useSelector((state: storeType) => state.user);\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setDarkTheme(getTheme());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        dispatcher(login(user));\r\n      } else {\r\n        dispatcher(logout());\r\n      }\r\n    })\r\n  }, [dispatcher]);\r\n\r\n  const signIn = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    await auth.signInWithPopup(provider);\r\n  };\r\n\r\n  const signOut = () => {\r\n    auth.signOut();\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    setDarkTheme((ps) => {\r\n      if (ps) {\r\n        window.localStorage.setItem(\"theme\", \"light\");\r\n      } else {\r\n        window.localStorage.setItem(\"theme\", \"dark\");\r\n      }\r\n      return !ps;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{ signIn, signOut }}>\r\n      <div className={`App ${darkTheme ? \"dark\" : \"\"}`}>\r\n        <Navbar {...{ changeTheme }} />\r\n        {user ? (\r\n          <Body add={() => showForm(true)} />\r\n        ) : (\r\n          <div id=\"signInBody\">\r\n            <Authenticate />\r\n          </div>\r\n        )}\r\n        {form ? <Form close={() => showForm(false)} /> : \"\"}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { habit, HabitActionType, habitDispatches, userDispatches, UserActionType } from \"../type\";\r\nimport firebase from \"firebase\";\r\nimport { combineReducers } from 'redux';\r\n\r\nconst habitsReducer = (state: Array<habit> = [], action: HabitActionType) => {\r\n  switch (action.type) {\r\n    case habitDispatches.ADD:\r\n      if (typeof action.payload === \"object\") {\r\n        const id = action.payload.id;\r\n        const found = state.findIndex(i => i.id === id);\r\n        if (found !== -1) {\r\n          return [...state.slice(0, found), action.payload, ...state.slice(found + 1)];\r\n        } else {\r\n          return [...state, action.payload];\r\n        }\r\n      } else console.warn(\"Payload supplied incorrectly\\n\");\r\n      return [...state];\r\n    case habitDispatches.DELETE:\r\n      const foundHabit = state.findIndex(i => i.id === action.payload);\r\n      return [...state.slice(0, foundHabit), ...state.slice(foundHabit + 1)];\r\n    case habitDispatches.CLEAR:\r\n      return [];\r\n  }\r\n  return state;\r\n}\r\n\r\nconst userReducer = (state: firebase.User | null = null, action: UserActionType) => {\r\n  switch (action.type) {\r\n    case userDispatches.LOGIN:\r\n      return action.payload;\r\n    case userDispatches.LOGOUT:\r\n      return null;\r\n  }\r\n  return state;\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  user: userReducer,\r\n  habits: habitsReducer\r\n});\r\n\r\nexport default allReducers;\r\n\r\nexport type storeType = {\r\n  user: firebase.User | null | undefined,\r\n  habits: Array<habit>\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport reducers from \"./redux/reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}